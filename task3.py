# –ù–∞–ø–∏—à–∏—Ç–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ json —Ñ–∞–π–ª –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–µ–∫–æ—Ä–∏—Ä—É–µ–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ–Ω–∞
# –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç. –ü—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –≤—ã–∑–æ–≤–µ —Ñ–∞–π–ª –¥–æ–ª–∂–µ–Ω —Ä–∞—Å—à–∏—Ä—è—Ç—å—Å—è, –∞ –Ω–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è.
# üìå –ö–∞–∂–¥—ã–π –∫–ª—é—á–µ–≤–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–ª—é—á json —Å–ª–æ–≤–∞—Ä—è.
# üìå –î–ª—è –¥–µ–∫–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∫–∞–∫ –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–µ, —Ç–∞–∫ –∏ –∫–ª—é—á–µ–≤—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã.
# üìå –ò–º—è —Ñ–∞–π–ª–∞ –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –∏–º–µ–Ω–µ–º –¥–µ–∫–æ—Ä–∏—Ä—É–µ–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.

from typing import Callable
import json
import random

def deco(func: Callable):
    def wrapper(a, b, *arg, **args):
        fileName = str('{}'.format(func))[1:-1] # –î–æ—Å—Ç–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
        ind1 = str('{}'.format(func))[1:-1].index(' ')
        ind2 = str('{}'.format(func))[1:-1].index(' ', ind1 + 1)
        fileName = fileName[ind1 + 1:ind2]
        if not 1 <= a <= 100:
            a = random.randint(1, 100)
        if not 1 <= b <= 100:
            b = random.randint(1, 10)
        result = func(b, a)
        with open('{}'.format(fileName) + '.json', "a") as file:
            myDict = {}
            myDict['a'] = a
            myDict['b'] = b
            myDict.update(**args)
            json.dump(myDict, file)
        return result
    return wrapper

@deco
def fuTwo(count,x):
    while count > 0:
        number = int(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: "))
        if number < x:
            print("–ò—Å–∫–æ–º–æ–µ –±–æ–ª—å—à–µ ")
        elif number > x:
            print('–ò—Å–∫–æ–º–æ–µ –º–µ–Ω—å—à–µ ')
        else:
            print("–£–≥–∞–¥–∞–ª–∏!")
            return count
        count -= 1
    return count

if __name__=="__main__":
    numb = int(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100 –¥–ª—è –∑–∞–≥–∞–¥—ã–≤–∞–Ω–∏—è: "))
    count = int(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10 - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –¥–ª—è —É–≥–∞–¥—ã–≤–∞–Ω–∏—è: "))
    fuTwo(numb, count)
    # fuTwo(5, 8, c=4)